#!/bin/bash

# Couleurs pour les messages
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${YELLOW}üöÄ D√©marrage de l'environnement de d√©veloppement...${NC}"

# V√©rifier si .env.local existe, sinon le cr√©er √† partir de .env.local.example
if [ ! -f .env.local ]; then
    echo -e "${YELLOW}‚öôÔ∏è  Fichier .env.local non trouv√©, cr√©ation √† partir de .env.local.example...${NC}"
    if [ -f .env.local.example ]; then
        cp .env.local.example .env.local
        echo -e "${GREEN}‚úÖ Fichier .env.local cr√©√©${NC}"
        echo -e "${YELLOW}‚ö†Ô∏è  N'oubliez pas de configurer vos variables dans .env.local${NC}"
    else
        echo -e "${RED}‚ùå Fichier .env.local.example non trouv√©${NC}"
        exit 1
    fi
fi

# G√©n√©rer APP_SECRET si non d√©fini
if ! grep -q "^APP_SECRET=" .env.local || grep -q "^APP_SECRET=!ChangeThis!" .env.local; then
    echo -e "${YELLOW}üîë G√©n√©ration d'un nouveau APP_SECRET...${NC}"
    NEW_SECRET=$(openssl rand -hex 16)
    sed -i "s/^APP_SECRET=.*$/APP_SECRET=$NEW_SECRET/" .env.local
    echo -e "${GREEN}‚úÖ Nouveau APP_SECRET g√©n√©r√©${NC}"
fi

# D√©marrer les containers
echo -e "${YELLOW}üì¶ D√©marrage des containers Docker...${NC}"
docker compose up -d

# Attendre que les services soient pr√™ts
echo -e "${YELLOW}‚è≥ Attente de la disponibilit√© des services...${NC}"
timeout=120
elapsed=0
while ! docker compose exec -T database mysqladmin ping -h localhost --silent; do
    sleep 1
    elapsed=$((elapsed+1))
    if [ "$elapsed" -ge "$timeout" ]; then
        echo -e "${RED}‚ùå Timeout en attendant MySQL${NC}"
        exit 1
    fi
done

# Installation des d√©pendances
echo -e "${YELLOW}üìö Installation des d√©pendances PHP...${NC}"
docker compose exec -T php composer install

echo -e "${YELLOW}üìö Installation des d√©pendances Node.js...${NC}"
docker compose exec -T php yarn install

# Construction des assets
echo -e "${YELLOW}üî® Construction des assets...${NC}"
docker compose exec -T php yarn dev

# Migrations de la base de donn√©es
echo -e "${YELLOW}üîÑ Ex√©cution des migrations...${NC}"
docker compose exec -T php bin/console doctrine:migrations:migrate --no-interaction

echo -e "${GREEN}‚úÖ Environnement de d√©veloppement pr√™t !${NC}"
echo -e "${GREEN}üìù Services disponibles :${NC}"
echo -e "   ‚Ä¢ Application : ${YELLOW}http://localhost:8080${NC}"
echo -e "   ‚Ä¢ Adminer    : ${YELLOW}http://localhost:8081${NC}"
echo -e "   ‚Ä¢ Mailhog    : ${YELLOW}http://localhost:8025${NC}"
echo -e "   ‚Ä¢ MySQL      : ${YELLOW}localhost:3306${NC}"
echo -e "   ‚Ä¢ Redis      : ${YELLOW}localhost:6379${NC}"
